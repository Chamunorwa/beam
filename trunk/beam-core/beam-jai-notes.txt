TODOs
=====
Image export must use JAI "filestore" operator, ImageIO cannot be used anymore!!!
TiePointGrid display does not function currently
NoDataOverlay --> 1-band, PlanarImage (same as for as ROI)
Don't display the tile regions which are out of image bounds

Questions
=========
Q: How are planar images released from cache?
A: TileCache.releaseTiles(RenederedImage im);
Q: How can we attach a JAI tile cache metric to a tile?
A: Override OpImage.getTileCacheMetric(), use TileCache.setComparator(...)
Q: If a setting changes, has the DAG to be recomputed? What about the images not used anymore?
A:
Q: Can we defer the compution of tiles for the display, e.g. using PlanarImage.queueTiles() and a TileComputationListener ?
A:
Q: Can't we use the JAI OpImage directly as base class for our operators?
A:

Problems
========
* Progress minitoring is not possible using JAI.
* Unforunately all tiles are requested if
  (1) navigation image is created
      Solution:
      Only compute quicklook/per RasterDataNode once.
      Store it using RasterDataNode.setQuicklookImage(RanderedImage ql)
      Navigation window can use this image and scale it accordingly. Provide action "Update quicklook";
  (2) range/histogram of an image is computed
      Solution: RasterDataNode shall have a data range, for BYTE and SHORT, default values can be set at construction time.
      ProductReaders may set actual values derived from metadata or a-priori knowledge. The final "true" min/max may be
      computed using the statistics tool.

Ideas
=====
Bitmask overlays could be separate layers
Suggest using only WeakReferences to Product(Nodes) in JAI chains
RGB generation can be greatly optimized if all 3(4) expressions are evaluated in the same namespace


See also
========
ImageCanvas, JADEDisplay:
http://forums.java.net/jive/thread.jspa?messageID=197881&#197881
http://wiki.java.net/bin/view/Javapedia/AsynchronousDisplayOfTiledImages
https://jaistuff.dev.java.net/datasets.html
